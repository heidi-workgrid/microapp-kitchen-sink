{"version":3,"sources":["pages/Summary.js","pages/Detail.js","App.js","index.js"],"names":["Summary","microapp","useRef","MicroApp","id","audience","useEffect","current","initialize","requestToken","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","wrap","_context","prev","next","getToken","stop","apply","this","arguments","react_default","createElement","className","onClick","randomTitles","updateTitle","Math","floor","random","length","showDetail","url","concat","window","location","origin","title","Detail","for","type","placeholder","name","hideDetail","App","react_router_dom","basename","react_router","path","exact","component","ReactDOM","render","src_App","document","getElementById"],"mappings":"kRAmDeA,EAhDC,WACd,IAAMC,EAAWC,iBACf,IAAIC,IAAS,CACXC,GAAI,mBACJC,SAAU,sBAIdC,oBAAU,WACRL,EAASM,QAAQC,cAChB,IAEH,IAQMC,EAAY,eAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAG,SAAAC,IAAA,OAAAH,EAAAC,EAAAG,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACbnB,EAASM,QAAQc,WADJ,wBAAAH,EAAAI,SAAAN,MAAH,yBAAAN,EAAAa,MAAAC,KAAAC,YAAA,GASlB,OACEC,EAAAZ,EAAAa,cAAA,WACED,EAAAZ,EAAAa,cAAA,+BACAD,EAAAZ,EAAAa,cAAA,2FACAD,EAAAZ,EAAAa,cAAA,OAAKC,UAAU,yBACbF,EAAAZ,EAAAa,cAAA,UAAQC,UAAU,YAAYC,QAVhB,WAClB,IAAMC,EAAe,CAAC,gBAAiB,gBAAiB,iBACxD7B,EAASM,QAAQwB,YAAYD,EAAaE,KAAKC,MAAMD,KAAKE,SAAWJ,EAAaK,YAQ9E,gBAGAT,EAAAZ,EAAAa,cAAA,UAAQC,UAAU,YAAYC,QAASpB,GAAvC,iBAGAiB,EAAAZ,EAAAa,cAAA,UAAQC,UAAU,UAAUC,QA5Bf,WAEjB5B,EAASM,QAAQ6B,WAAW,CAC1BC,IAAG,GAAAC,OAAKC,OAAOC,SAASC,OAArB,mCACHC,MAAO,qBAwBL,kBCIOC,SA3CA,WACb,IAAM1C,EAAWC,iBACf,IAAIC,IAAS,CACXC,GAAI,mBACJC,SAAU,sBAIdC,oBAAU,WACRL,EAASM,QAAQC,cAChB,IAEH,IAIMC,EAAY,eAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAG,SAAAC,IAAA,OAAAH,EAAAC,EAAAG,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACbnB,EAASM,QAAQc,WADJ,wBAAAH,EAAAI,SAAAN,MAAH,yBAAAN,EAAAa,MAAAC,KAAAC,YAAA,GAIlB,OACEC,EAAAZ,EAAAa,cAAA,OAAKC,UAAU,aACbF,EAAAZ,EAAAa,cAAA,+BACAD,EAAAZ,EAAAa,cAAA,2JAIAD,EAAAZ,EAAAa,cAAA,OAAKC,UAAU,iBACbF,EAAAZ,EAAAa,cAAA,SAAOiB,IAAI,WAAX,kBACAlB,EAAAZ,EAAAa,cAAA,SAAOkB,KAAK,OAAOC,YAAY,gBAAgBC,KAAK,aAEtDrB,EAAAZ,EAAAa,cAAA,OAAKC,UAAU,gBACbF,EAAAZ,EAAAa,cAAA,UAAQC,UAAU,YAAYC,QApBjB,WACjB5B,EAASM,QAAQyC,eAmBb,eAGAtB,EAAAZ,EAAAa,cAAA,UAAQC,UAAU,UAAUC,QAASpB,GAArC,qBCxBOwC,EATH,WACV,OACEvB,EAAAZ,EAAAa,cAACuB,EAAA,EAAD,CAAQC,SAAS,0BACfzB,EAAAZ,EAAAa,cAACyB,EAAA,EAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAWvD,IACjC0B,EAAAZ,EAAAa,cAACyB,EAAA,EAAD,CAAOC,KAAK,UAAUE,UAAWZ,MCLvCa,IAASC,OAAO/B,EAAAZ,EAAAa,cAAC+B,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.da6988ac.chunk.js","sourcesContent":["import React, { useRef, useEffect } from 'react'\nimport MicroApp from '@workgrid/micro-app'\n\nconst Summary = () => {\n  const microapp = useRef(\n    new MicroApp({\n      id: 'example-microapp',\n      audience: 'example-microapp'\n    })\n  )\n\n  useEffect(() => {\n    microapp.current.initialize()\n  }, [])\n\n  const showDetail = () => {\n    // We have to use the hash router to show detail due to Github pages limitations\n    microapp.current.showDetail({\n      url: `${window.location.origin}/microapp-kitchen-sink/#/detail`,\n      title: 'Microapp Title'\n    })\n  }\n\n  const requestToken = async () => {\n    await microapp.current.getToken()\n  }\n\n  const changeTitle = () => {\n    const randomTitles = ['Altered Title', 'Awesome Title', 'Another Title']\n    microapp.current.updateTitle(randomTitles[Math.floor(Math.random() * randomTitles.length)])\n  }\n\n  return (\n    <div>\n      <h1>Workgrid Microapp</h1>\n      <p>This is the summary microapp, here are the actions you can perform in summary:</p>\n      <div className=\"action-block vertical\">\n        <button className=\"secondary\" onClick={changeTitle}>\n          Change Title\n        </button>\n        <button className=\"secondary\" onClick={requestToken}>\n          Request Token\n        </button>\n        <button className=\"primary\" onClick={showDetail}>\n          Show Detail\n        </button>\n      </div>\n    </div>\n  )\n}\n\nexport default Summary\n","import React, { useRef, useEffect } from 'react'\nimport MicroApp from '@workgrid/micro-app'\nimport './detail.css'\n\nconst Detail = () => {\n  const microapp = useRef(\n    new MicroApp({\n      id: 'example-microapp',\n      audience: 'example-microapp'\n    })\n  )\n\n  useEffect(() => {\n    microapp.current.initialize()\n  }, [])\n\n  const hideDetail = () => {\n    microapp.current.hideDetail()\n  }\n\n  const requestToken = async () => {\n    await microapp.current.getToken()\n  }\n\n  return (\n    <div className=\"container\">\n      <h1>Workgrid Microapp</h1>\n      <p>\n        This is the detail panel of a microapp. Remember the summary and detail are independent, think of them as two\n        individual tabs in your browser.\n      </p>\n      <div className=\"example-block\">\n        <label for=\"example\">Example Input:</label>\n        <input type=\"text\" placeholder=\"Example input\" name=\"example\"></input>\n      </div>\n      <div className=\"action-block\">\n        <button className=\"secondary\" onClick={hideDetail}>\n          Hide Detail\n        </button>\n        <button className=\"primary\" onClick={requestToken}>\n          Request Token\n        </button>\n      </div>\n    </div>\n  )\n}\n\nexport default Detail\n","import React from 'react'\nimport { HashRouter as Router, Route } from 'react-router-dom'\n\nimport Summary from './pages/Summary'\nimport Detail from './pages/Detail'\n\nconst App = () => {\n  return (\n    <Router basename=\"/microapp-kitchen-sink\">\n      <Route path=\"/\" exact component={Summary} />\n      <Route path=\"/detail\" component={Detail} />\n    </Router>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}